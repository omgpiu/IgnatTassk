{"version":3,"sources":["listOfPlans/priority/PriorityButtons.module.css","App.module.css","listOfPlans/content/task/task.module.css","helloimput/MyInput/Input.module.css","listOfPlans/listOfPlans.module.css","helloimput/HelloImput.module.css","helloimput/MyButton/MyNewButton.module.css","listOfPlans/content/task/task.tsx","listOfPlans/content/Content.tsx","listOfPlans/priority/PriorityButtons.tsx","listOfPlans/listOfPlans.tsx","Appfirst.tsx","helloimput/MyInput/MyInput.tsx","helloimput/MyButton/MyButton.tsx","helloimput/HelloInput.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Task","props","className","st","plan","item","title","task","prior","priority","onClick","removeTask","id","Content","lists","map","t","key","PriorityButtons","header","priorities","itemB","changeFilter","itemADD","alert","LisfOfPlans","useState","filter","setFilter","list","setList","list2","setList2","filteredList","filteredList2","console","log","tasksForToDOLists","tasksForToDOLists2","wrapper","value","thingsToDO","firstTitle","secondTitle","MessageContainer","cl","MainContainer","avatar","src","alt","MainContainer__userName","name","MainContainer__message","message","TimeDate","MainContainer_date","time","MyInputNya","onEnter","error","restProps","onKeyPress","e","charCode","input_style","type","error_message","MyButtonNya","s","buttonnya","HelloInput","setLists","setTitle","setError","greeting","trim","v1","listOfNames","length","MyButton","MyInput","onChange","currentTarget","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fa4eed23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PriorityButtons_header__12kgT\",\"priorities\":\"PriorityButtons_priorities__25OaX\",\"itemB\":\"PriorityButtons_itemB__1s2zo\",\"item\":\"PriorityButtons_item__2-qv2\",\"itemADD\":\"PriorityButtons_itemADD__20B0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"App_MainContainer__2ZyA0\",\"MainContainer__userName\":\"App_MainContainer__userName__2taTn\",\"TimeDate\":\"App_TimeDate__C1RTT\",\"avatar\":\"App_avatar__n7J4S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plan\":\"task_plan__2LwX0\",\"item\":\"task_item__3SdOw\",\"title\":\"task_title__39yNQ\",\"prior\":\"task_prior__2Ck77\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_style\":\"Input_input_style__3eldV\",\"error\":\"Input_error__16Bwk\",\"error_message\":\"Input_error_message__2qmSq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"listOfPlans_wrapper__euEFf\",\"thingsToDO\":\"listOfPlans_thingsToDO__2XEKv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HelloImput_wrapper__32jp8\",\"title\":\"HelloImput_title__3I4Ve\",\"error\":\"HelloImput_error__skjqb\",\"error_message\":\"HelloImput_error_message__1F1JA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonnya\":\"MyNewButton_buttonnya__2_Ijb\"};","import React from 'react';\r\nimport st from \"./task.module.css\";\r\nimport {ValueOfTasks} from \"../../listOfPlans\";\r\n\r\n\r\ntype PropsTypes = {\r\n task: ValueOfTasks\r\n    removeTask:(listId:number) => void\r\n}\r\n\r\n\r\n\r\nfunction Task(props: PropsTypes) {\r\n    return (\r\n        <div className={st.plan}>\r\n            <div className={st.item}>\r\n                <div className={st.title}>{props.task.title}</div>\r\n                <div className={st.prior}>{props.task.priority}</div>\r\n                <button onClick={() => props.removeTask(props.task.id)}>Remove</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Task;","import React from 'react';\r\n\r\nimport {ValueOfTasks} from \"../listOfPlans\";\r\n\r\nimport Task from \"./task/task\";\r\n\r\nexport type PropsType = {\r\n    lists: Array<ValueOfTasks>\r\n    removeTask:(taskId:number) => void\r\n\r\n}\r\n\r\n\r\nfunction Content(props: PropsType) {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.lists.map(t => <Task key={t.id} task={t} removeTask={props.removeTask}/>)\r\n            }\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport st from './PriorityButtons.module.css'\r\n\r\nimport {FilterPriorityType} from \"../listOfPlans\";\r\n\r\nexport type PriorityButtonsType = {\r\n    changeFilter: (value: FilterPriorityType) => void\r\n}\r\n\r\n\r\nfunction PriorityButtons(props: PriorityButtonsType) {\r\n    return (\r\n        <div>\r\n\r\n            <div className={st.header}>List of all my plans</div>\r\n            <div className={st.priorities}>\r\n                <button className={st.itemB} onClick={() => {\r\n                    props.changeFilter('High')\r\n                }}>High\r\n                </button>\r\n                <button className={st.itemB} onClick={() => {\r\n                    props.changeFilter('Middle')\r\n                }}>Middle\r\n                </button>\r\n                <button className={st.itemB} onClick={() => {\r\n                    props.changeFilter('Low')\r\n                }}>Low\r\n                </button>\r\n                <button className={st.itemB} onClick={() => {\r\n                    props.changeFilter('All')\r\n                }}>All\r\n                </button>\r\n                <button className={st.itemADD} onClick={() => alert('Еще  не готово =(')}>Add</button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default PriorityButtons;","import React, {useState} from 'react';\r\nimport st from './listOfPlans.module.css'\r\nimport Content from \"./content/Content\";\r\nimport PriorityButtons from \"./priority/PriorityButtons\";\r\n\r\ntype ListOfPlansType = {\r\n    firstTitle: string\r\n    secondTitle: string\r\n}\r\n\r\n\r\nexport type ValueOfTasks = {\r\n    title: string\r\n    priority: 'High' | 'Middle' | 'Low'\r\n    id: number\r\n}\r\n\r\nexport type FilterPriorityType = 'High' | 'Low' | 'Middle' | 'All'\r\n\r\n\r\nfunction LisfOfPlans(props: ListOfPlansType,) {\r\n    let [filter, setFilter] = useState<FilterPriorityType>('All');\r\n\r\n\r\n    let [list, setList] = useState<Array<ValueOfTasks>>([\r\n        {id: 99, title: 'Посуда', priority: 'High'},\r\n        {id: 98, title: 'Уборка1', priority: 'High'},\r\n        {id: 97, title: 'Уборка2', priority: 'High'},\r\n        {id: 96, title: 'Стрика1', priority: 'Middle'},\r\n        {id: 95, title: 'Стрика2', priority: 'Middle'},\r\n        {id: 94, title: 'Стрика3', priority: 'Middle'},\r\n        {id: 93, title: 'Полы1', priority: 'Low'},\r\n        {id: 92, title: 'Полы2', priority: 'Low'},\r\n        {id: 91, title: 'Полы3', priority: 'Low'},\r\n\r\n    ]);\r\n    let [list2, setList2] = useState<Array<ValueOfTasks>>([\r\n        {id: 5, title: 'JS1', priority: 'High'},\r\n        {id: 6, title: 'JS2', priority: 'High'},\r\n        {id: 7, title: 'JS3', priority: 'High'},\r\n        {id: 8, title: 'React', priority: 'High'},\r\n        {id: 9, title: 'CSS1', priority: 'Middle'},\r\n        {id: 10, title: 'CSS2', priority: 'Middle'},\r\n        {id: 11, title: 'CSS3', priority: 'Middle'},\r\n        {id: 12, title: 'HTML1', priority: 'Low'},\r\n        {id: 13, title: 'HTML2', priority: 'Low'},\r\n        {id: 14, title: 'HTML3', priority: 'Low'},\r\n    ]);\r\n\r\n\r\n    function removeTask(id: number) {\r\n        let filteredList = list.filter(t => t.id != id);\r\n        setList(filteredList);\r\n        let filteredList2 = list2.filter(t => t.id != id);\r\n        setList2(filteredList2)\r\n\r\n        console.log(filteredList)\r\n\r\n    }\r\n\r\n    function changeFilter(value: FilterPriorityType) {\r\n        setFilter(value)\r\n    }\r\n\r\n\r\n    let tasksForToDOLists = list;\r\n    if (filter === 'High') { tasksForToDOLists = list.filter(t => t.priority === 'High');}\r\n    if (filter === 'Low') {tasksForToDOLists = list.filter(t => t.priority === 'Low');}\r\n     if  (filter === 'Middle') { tasksForToDOLists = list.filter(t => t.priority === 'Middle');}\r\n    let tasksForToDOLists2 = list2;\r\n    if (filter === 'High') { tasksForToDOLists2 = list2.filter(t => t.priority === 'High');}\r\n    if (filter === 'Low') {tasksForToDOLists2 = list2.filter(t => t.priority === 'Low');}\r\n    if  (filter === 'Middle') { tasksForToDOLists2 = list2.filter(t => t.priority === 'Middle');}\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={st.wrapper}>\r\n            <PriorityButtons changeFilter={changeFilter}/>\r\n            <div className={st.thingsToDO}>{props.firstTitle}</div>\r\n            <Content lists={tasksForToDOLists} removeTask={removeTask}  />\r\n            <div className={st.thingsToDO}>{props.secondTitle}</div>\r\n            <Content lists={tasksForToDOLists2} removeTask={removeTask} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LisfOfPlans;","import cl from \"./App.module.css\";\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\n\r\nfunction MessageContainer(props: PropsType) {\r\n    return (\r\n        <div className={cl.MainContainer}>\r\n            <div className={cl.avatar}> <img src={'https://c7.hotpng.com/preview/856/279/701/computer-icons-pictogram-asia-clip-art-asia.jpg'} alt=\"logo\"/> </div>\r\n            <div>\r\n                <div className={cl.MainContainer__userName}>{props.name}</div>\r\n                <div className={cl.MainContainer__message}>{props.message} </div>\r\n            </div>\r\n            <div className={cl.TimeDate}>\r\n                <div className={cl.MainContainer_date}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageContainer","import React, {DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from 'react';\r\nimport st from './Input.module.css';\r\n\r\nexport type InputNyaPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { onEnter?: () => void, error?: string | null};\r\n\r\nfunction MyInputNya (props: InputNyaPropsType) {\r\n    const {onEnter, error, ...restProps} = props;\r\n\r\n    const HandlerOnKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            if (onEnter){\r\n                onEnter()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <input onKeyPress={HandlerOnKeyPress} {...restProps} className={error ? `${st.error} ${st.input_style}`:st.input_style} type=\"text\"/>\r\n            {error && <div className={st.error_message}>{error}</div>}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default  MyInputNya;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\n\r\nimport s from './MyNewButton.module.css';\r\n\r\nexport type ButtonNyaPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\n\r\nconst MyButtonNya = (props: ButtonNyaPropsType) => {\r\n    return (\r\n       <div>\r\n           <button className={s.buttonnya} {...props}>{props.value}</button>\r\n       </div>\r\n    )\r\n};\r\n\r\n\r\nexport default MyButtonNya;","import React, {ChangeEvent, useState} from 'react';\r\nimport st from './HelloImput.module.css';\r\nimport {v1} from 'uuid';\r\nimport MyInputNya from './MyInput/MyInput';\r\nimport MyButtonNya from './MyButton/MyButton';\r\n\r\n\r\ntype NameType = {\r\n    title: string\r\n    id: string\r\n\r\n}\r\n\r\n\r\nfunction HelloInput() {\r\n\r\n    let [lists, setLists] = useState<Array<NameType>>([]);\r\n    let [title, setTitle] = useState('');\r\n    let [error, setError] = useState<string | null>(null);\r\n\r\n    function greeting() {\r\n        if (title.trim() !== '') {\r\n            alert('Hello ' + title);\r\n            setTitle('');\r\n            setLists([...lists, {title: title, id: v1()}]);\r\n        } else {\r\n            alert('Input your name,please');\r\n            setError('Title is required');\r\n        }\r\n    }\r\n\r\n    let listOfNames = lists.map(t => {\r\n        return (\r\n\r\n            <li key={t.id}>\r\n                <span>{t.title}</span>\r\n            </li>\r\n\r\n        );\r\n    });\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value);\r\n    };\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        setError(null);\r\n        if (e.charCode === 13) {\r\n            greeting();\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={st.wrapper}>\r\n            <span className={st.title}>Say Hello</span>\r\n            <div>Количество имен в списке - {lists.length}</div>\r\n\r\n            <div> <MyButtonNya onClick={greeting} value={'Push me'}  title={'Do it'}/></div>\r\n\r\n            <MyInputNya type=\"text\"\r\n                        value={title}\r\n                        onChange={onChangeHandler}\r\n                        onKeyPress={onKeyPressHandler}\r\n                        error={error}\r\n\r\n            />\r\n\r\n\r\n\r\n            <div>\r\n                {listOfNames}\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default HelloInput;","import React from 'react';\r\nimport LisfOfPlans from './listOfPlans/listOfPlans';\r\nimport MessageContainer from './Appfirst';\r\nimport HelloInput from './helloimput/HelloInput';\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>Задача №1</div>\r\n            <MessageContainer name={'Alex'} message={'Did you write something?'} time={'11.20'}/>\r\n            <div>\r\n\r\n                <hr/>\r\n                Задача №2\r\n            </div>\r\n            <LisfOfPlans firstTitle={'Home'} secondTitle={'Studying'}/>\r\n            <div>\r\n                <hr/>\r\n                Задача №3\r\n            </div>\r\n            <HelloInput/>\r\n            <div>\r\n                <hr/>\r\n                Задача №4\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}